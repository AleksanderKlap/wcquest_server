generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
  binaryTargets   = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [postgis(schema: "postgis")]
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  created_at DateTime @default(now())
  google_id  String?  @unique
  password   String?
  updated_at DateTime @updatedAt
  profile    Profile?
  toilet     Toilet?
}

model Profile {
  id       Int     @id @default(autoincrement())
  username String  @default("wcquest_user")
  bio      String? @default("I love this app")
  user_id  Int     @unique
  user     User    @relation(fields: [user_id], references: [id])
}

model Toilet {
  id             Int                                           @id @default(autoincrement())
  name           String
  description    String?
  location       Unsupported("postgis.geography(Point, 4326)")
  created_by     Int                                           @unique
  user           User                                          @relation(fields: [created_by], references: [id])
  paid           Paid                                          @default(FREE)
  created_at     DateTime                                      @default(now())
  updated_at     DateTime                                      @updatedAt
  toilet_feature ToiletFeature[]

  @@index([location], map: "toilet_geo_index", type: Gist)
}

model ToiletFeature {
  toilet     Toilet  @relation(fields: [toilet_id], references: [id])
  toilet_id  Int
  feature    Feature @relation(fields: [feature_id], references: [id])
  feature_id Int

  @@id([toilet_id, feature_id])
}

model Feature {
  id             Int             @id @default(autoincrement())
  name           String
  description    String?
  toilet_feature ToiletFeature[]
}

enum Paid {
  FREE
  PAID
}
